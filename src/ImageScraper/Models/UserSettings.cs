using DocumentFormat.OpenXml.Office2010.ExcelAc;
using Newtonsoft.Json;
using System.IO;
using System.Windows;
using System.Windows.Media;

namespace ImageScraper.Models
{
    public class UserSettings
    {
        //Home
        public bool IsAutoCreateQuotes { get; set; }

        public int NumberOfImagesFrom { get; set; }
        public int NumberOfImagesTo { get; set; }
        public int NumberOfThreads { get; set; }
        public int NumberOfWpThreads { get; set; }
        public int NumberOfWpPostThreads { get; set; }

        //Wordpress
        public string Username { get; set; }

        public string Url { get; set; }
        public string Password { get; set; }

        //Setting
        public string CategoryTitle { get; set; }
        public string TagTitle { get; set; }
        public string PostTitle { get; set; }
        public string TinsoftApi { get; set; }
        public string OpenAIApiKey { get; set; }
        public int SelectedLanguageIndex { get; set; }
        public bool IsLanguages { get; set; }
        public string OtherLanguage { get; set; }
        public int SelectedTemplateFileIndex { get; set; }
        public int SelectedStatusTypeIndex { get; set; }
        public int SelectedPlatformsIndex { get; set; }
        public int SelectedDevicesIndex { get; set; }
        public int ImageWidth { get; set; }
        public int ImageHeight { get; set; }
        public int ImageSize { get; set; }
        public bool IsAutoCreateCategoryByTopic { get; set; }
        public bool IsAutoCreateTagByTopic { get; set; }
        public string InternalTitle { get; set; }

        //OpenAI
        public int NumberOfOpenAIThreads { get; set; }
        public int NumberOfQuotes { get; set; }
        public bool IsAutoGeneratedContentIntro { get; set; }
        public bool IsAutoGeneratedContentEnd { get; set; }

        //ImageEditor
        public string[] SelectedFonts { get; set; }
        public Color SelectedColor { get; set; }
        public string SelectedFontWeight { get; set; }
        public Point TranslateOffset { get; set; }
        public string Scale { get; set; }
        public bool IsAlignLeftChecked { get; set; }
        public bool IsAlignCenterChecked { get; set; }
        public bool IsAlignRightChecked { get; set; }
        public bool IsAutoRandomColor { get; set; }
        public bool IsRandomImage { get; set; }
        public string ImagePath { get; set; }

        public void SaveSettings()
        {
            File.WriteAllText(@"setting.json", JsonConvert.SerializeObject(this));
        }

        public void LoadSettings()
        {
            if (!File.Exists(@"setting.json"))
            {
                File.WriteAllText(@"setting.json", JsonConvert.SerializeObject(this));
            }
            var json = File.ReadAllText(@"setting.json");
            var obj = JsonConvert.DeserializeObject<UserSettings>(json);

            //Home
            IsAutoCreateQuotes = obj.IsAutoCreateQuotes;
            NumberOfImagesFrom = obj.NumberOfImagesFrom;
            NumberOfImagesTo = obj.NumberOfImagesTo;
            NumberOfThreads = obj.NumberOfThreads;
            NumberOfWpThreads = obj.NumberOfWpThreads;
            NumberOfWpPostThreads = obj.NumberOfWpPostThreads;

            //Wordpress
            Username = obj.Username;
            Url = obj.Url;
            Password = obj.Password;

            //Settting
            CategoryTitle = obj.CategoryTitle;
            TagTitle = obj.TagTitle;
            PostTitle = obj.PostTitle;
            TinsoftApi = obj.TinsoftApi;
            OpenAIApiKey = obj.OpenAIApiKey;
            SelectedLanguageIndex = obj.SelectedLanguageIndex;
            SelectedPlatformsIndex = obj.SelectedPlatformsIndex;
            SelectedDevicesIndex = obj.SelectedDevicesIndex;
            IsLanguages = obj.IsLanguages;
            OtherLanguage = obj.OtherLanguage;
            SelectedTemplateFileIndex = obj.SelectedTemplateFileIndex;
            SelectedStatusTypeIndex = obj.SelectedStatusTypeIndex;
            ImageWidth = obj.ImageWidth;
            ImageHeight = obj.ImageHeight;
            ImageSize = obj.ImageSize;
            IsAutoCreateTagByTopic = obj.IsAutoCreateTagByTopic;
            IsAutoCreateCategoryByTopic = obj.IsAutoCreateCategoryByTopic;
            InternalTitle = obj.InternalTitle;

            //OpenAI
            NumberOfOpenAIThreads = obj.NumberOfOpenAIThreads;
            NumberOfQuotes = obj.NumberOfQuotes;
            IsAutoGeneratedContentIntro = obj.IsAutoGeneratedContentIntro;
            IsAutoGeneratedContentEnd = obj.IsAutoGeneratedContentEnd;

            //ImageEditor
            SelectedFonts = obj.SelectedFonts;
            SelectedColor = obj.SelectedColor;  
            SelectedFontWeight = obj.SelectedFontWeight;
            TranslateOffset = obj.TranslateOffset;
            Scale = obj.Scale;
            IsAlignLeftChecked = obj.IsAlignLeftChecked;
            IsAlignCenterChecked = obj.IsAlignLeftChecked;
            IsAlignRightChecked = obj.IsAlignLeftChecked;
            IsAutoRandomColor = obj.IsAutoRandomColor;
            IsRandomImage = obj.IsRandomImage;
            ImagePath = obj.ImagePath;
        }
    }
}