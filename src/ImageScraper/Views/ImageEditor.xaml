<UserControl x:Class="ImageScraper.Views.ImageEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ImageScraper.Views"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:ImageScraper.Converters"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:draw="clr-namespace:ImageScraper.ViewModels.Draw"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:ava="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:helpers="clr-namespace:ImageScraper.Helpers.UI"
             xmlns:dotNetKitControls="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox"
             xmlns:sdl="http://schemas.sdl.com/xaml"
             mc:Ignorable="d"
             xmlns:behaviors="clr-namespace:ImageScraper.Behaviors">

    <UserControl.Resources>
        <converters:PointToStringConverter x:Key="PointToStringConverter" />
        <GeometryDrawing x:Key="GridStyle"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="Green" />
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <VisualBrush x:Key="ImageAddLine" Visual="{iconPacks:RemixIcon Kind=ImageAddLine}" />
        <VisualBrush x:Key="Rectangle" Visual="{iconPacks:JamIcons Kind=Rectangle}" />
        <VisualBrush x:Key="ArrangeBringForward" Visual="{iconPacks:MaterialLight Kind=ArrangeBringForward}" />
        <VisualBrush x:Key="Delete" Visual="{iconPacks:Modern Kind=Delete}" />
        <VisualBrush x:Key="CloseMD" Visual="{iconPacks:Ionicons Kind=CloseMD}" />
        <converters:ColorToSolidColorBrushConverter x:Key="ColorToBrushConverter" />
        <converters:StringToFloatConverter x:Key="StringToFloatConverter" />
        <converters:BooleanNegationConverter x:Key="BooleanNegationConverter" />
    </UserControl.Resources>
    <Grid  Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.5*" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Height="30"
                HorizontalAlignment="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <prism:InvokeCommandAction CommandParameter="Home" Command="{Binding GoBackCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconTypicons Kind="ArrowBack" />
                                <TextBlock Margin="4 0 0 0"
                         VerticalAlignment="Center"
                         Text="Back" />
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Grid HorizontalAlignment="Right" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <RadioButton Height="30"
                                  Margin="5,0,0,0"
                                  Grid.Column="1"
                                  GroupName="TextAlignmentGroup"
                                  IsChecked="{Binding IsAlignLeftChecked}"
                                  Style="{StaticResource RadioButtonAsToggleButton}"
                                  HorizontalAlignment="Left">
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFeatherIcons Kind="AlignLeft" />
                                </StackPanel>
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </RadioButton>
                    <RadioButton Height="30"
                                  Margin="5,0"
                                  Grid.Column="2"
                                  GroupName="TextAlignmentGroup"
                                  IsChecked="{Binding IsAlignCenterChecked}"
                                  Style="{StaticResource RadioButtonAsToggleButton}"
                                  HorizontalAlignment="Left">           
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFeatherIcons Kind="AlignCenter" />
                                </StackPanel>
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </RadioButton>
                    <RadioButton Height="30"
                                  Margin="0,0,5,0"
                                  Grid.Column="3"
                                  GroupName="TextAlignmentGroup"
                                  IsChecked="{Binding IsAlignRightChecked}"
                                  Style="{StaticResource RadioButtonAsToggleButton}"
                                  HorizontalAlignment="Left">           
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFeatherIcons Kind="AlignRight" />
                                </StackPanel>
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </RadioButton>
                </Grid>
               
            </Grid>
          
            
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                    <ColumnDefinition  Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="0,0,5,0" Text="Fonts:" />
                <sdl:MultiSelectComboBox Grid.Row="1"
                                     Width="250"
                                         Height="60"
                                     SelectedItemTemplate="{StaticResource MultiSelectComboBox.SelectedItems.ItemTemplate}"
                                     DropdownItemTemplate="{StaticResource MultiSelectComboBox.Dropdown.ListBox.ItemTemplate}"
                                     EnableAutoComplete="True"
                                     ClearFilterOnDropdownClosing="True"
                                     SelectionMode="Multiple"
                                     IsEditable="True"
                                     EnableFiltering="True"
                                     EnableGrouping="True"
                                     ItemsSource="{Binding Fonts}"
                                     SelectedItems="{Binding SelectedFonts,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     SuggestionProvider="{Binding FontSuggestionProvider}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemsChanged">
                            <prism:InvokeCommandAction Command="{Binding SelectedFontsChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </sdl:MultiSelectComboBox>

                <Button Grid.Column="2"
                        Height="30"
                        Margin="5,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <prism:InvokeCommandAction CommandParameter="Home" Command="{Binding ReloadFontsCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="Reload" />
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
            </Grid>
            <Grid Margin="10,0,0,0" Grid.Column="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="0,0,5,0" Text="FontWeight:" />
                <ComboBox
                    Width="100"
                    Height="30"
                    VerticalContentAlignment="Center"
                    Grid.Column="1"
                    ItemsSource="{Binding FontWeight}"
                    SelectedValue="{Binding SelectedFontWeight}" />
            </Grid>
        </Grid>
        <Grid Margin="0,5,0,5" Grid.Row="1" Grid.ColumnSpan="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border  BorderBrush="Gray" BorderThickness="1">
                <richCanvas:RichItemsControl ItemsSource="{Binding Items}"
                                         DrawingEnded="source_DrawingEnded"
                                         Name="source"
                                         IsEnabled="{Binding ElementName=RandomImageCheckBox,Path=IsChecked,Converter={StaticResource BooleanNegationConverter}}"
                                         SelectedItems="{Binding SelectedItems}"
                                         SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                         EnableGrid="True"
                                         GridSpacing="100"
                                         TranslateOffset="{Binding TranslateOffset, Mode=TwoWay}"
                                         Scale="{Binding Scale, Converter={StaticResource StringToFloatConverter}, Mode=TwoWay}"
                                         GridStyle="{StaticResource GridStyle}"
                                         Background="AliceBlue"
                                         RealTimeDraggingEnabled="True"
                                         RealTimeSelectionEnabled="True"
                                         MousePosition="{Binding MousePosition,Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyDown">
                            <i:InvokeCommandAction Command="{Binding KeyDownCommand}"
                                           PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding MouseUpCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MouseDownCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <richCanvas:RichItemsControl.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Thêm ảnh"
                              Command="{Binding AddImageCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="18" Height="18" Fill="{StaticResource ImageAddLine}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Tạo khu vực"
                              Command="{Binding DrawRectCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="18" Height="18" Fill="{StaticResource Rectangle}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Chuyển lên trước"
                              Command="{Binding BringToFontCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="18" Height="18" Fill="{StaticResource ArrangeBringForward}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Xóa"
                              Command="{Binding DeleteCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="18" Height="18" Fill="{StaticResource Delete}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Xóa tất cả"
                              Command="{Binding DeleteAllCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="18" Height="18" Fill="{StaticResource CloseMD}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </richCanvas:RichItemsControl.ContextMenu>

                    <richCanvas:RichItemsControl.Resources>
                        <DataTemplate x:Key="SelectedAdornerTemplate">
                            <Border BorderBrush="DodgerBlue"
                            BorderThickness="1"
                            Background="DodgerBlue">
                                <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   MaxWidth="60">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} x {1}">
                                            <Binding Path="Width" />
                                            <Binding Path="Height" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                        <DataTemplate x:Key="HoverAdornerTemplate">
                            <Border BorderBrush="DodgerBlue"
                            BorderThickness="3">
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type draw:Rectangle}">
                            <Grid>
                                <Rectangle Stroke="Black" StrokeThickness="4" Opacity="0.5" Fill="White">
                                </Rectangle>
                            </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type draw:ImageVisual}">
                            <Image Source="{Binding ImageSource}"
                           Stretch="Fill" />
                        </DataTemplate>
                    </richCanvas:RichItemsControl.Resources>
                    <richCanvas:RichItemsControl.ItemContainerStyle>
                        <Style TargetType="richCanvas:RichItemContainer">
                            <Setter Property="Top"
                            Value="{Binding Top, Mode=TwoWay}" />
                            <Setter Property="Left"
                            Value="{Binding Left, Mode=TwoWay}" />
                            <Setter Property="Width"
                            Value="{Binding Width, Mode=TwoWay}" />
                            <Setter Property="Height"
                            Value="{Binding Height, Mode=TwoWay}" />
                            <Setter Property="helpers:AttachedAdorner.HasHoverAdorner"
                            Value="True" />

                            <Setter Property="helpers:AttachedAdorner.ShowResizeAdorner"
                           Value="{Binding IsSelected}" />
                            <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                            <Style.Triggers>
                                <Trigger Property="IsSelected"
                                 Value="True">
                                    <Setter Property="Opacity"
                                    Value="0.6" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </richCanvas:RichItemsControl.ItemContainerStyle>
                </richCanvas:RichItemsControl>
            </Border>
            <StackPanel Orientation="Horizontal"
                        Grid.Row="1"
                        Grid.Column="2">
                <TextBlock Text="Vị trí chuột: " />
                <TextBlock Text="{Binding MousePosition, Converter={StaticResource PointToStringConverter}}"
                           HorizontalAlignment="Left"></TextBlock>
            </StackPanel>
            <Border Grid.Row="2"  BorderBrush="Gray" BorderThickness="1">
                <Grid>

                    <ScrollViewer behaviors:ZoomBehavior.EnableZoom="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <Viewbox x:Name="viewbox">
                            <Canvas Width="{Binding ImageSource.PixelWidth}" Height="{Binding ImageSource.PixelHeight}">
                                <Image Source="{Binding ImageSource}" Stretch="None" />
                            </Canvas>
                        </Viewbox>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>
        <Grid Margin="5,5,0,5" Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="100" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <mah:MetroHeader Header="Nhập text demo:" />
            <ava:TextEditor BorderThickness="0.5" BorderBrush="Gray" Document="{Binding TextDemo}" Grid.Row="1">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ava:TextEditor>
            <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <GroupBox Margin="5 5 5 0" Header="Eye Dropper">
                        <mah:ColorEyeDropper Height="Auto"
                                         HorizontalContentAlignment="Center"
                                         mah:ControlsHelper.CornerRadius="3"
                                        SelectedColor="{Binding SelectedColor, Mode=TwoWay}">
                            <TextBlock TextAlignment="Center" TextWrapping="Wrap">
                            <Run Text="Bạn đã chọn color: " />
                            <Run FontWeight="Bold" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=mah:ColorEyeDropper}, Path=SelectedColor}" />
                            <LineBreak />
                            <Run Text="Nhấn và giữ để chọn màu khác trên màn hình." />
                            </TextBlock>
                        </mah:ColorEyeDropper>
                    </GroupBox>

                    <GroupBox Margin="5 5 5 0" Header="Color Canvas">
                        <mah:ColorCanvas x:Name="ColorCanvasExample"
                                         SelectedColor="{Binding SelectedColor, Mode=TwoWay}"
                                         DefaultColor="{DynamicResource MahApps.Colors.AccentBase}" />
                    </GroupBox>

                    <GroupBox Margin="5" Header="Color Picker">
                        <mah:ColorPicker x:Name="colorPickerExample"
                                     mah:TextBoxHelper.AutoWatermark="True"
                                     mah:TextBoxHelper.ClearTextButton="True"
                                     mah:TextBoxHelper.UseFloatingWatermark="True"
                                     mah:TextBoxHelper.Watermark="Select a color"
                                     SelectedColor="{Binding SelectedColor, Mode=TwoWay}" />
                    </GroupBox>
                    <CheckBox IsChecked="{Binding IsAutoRandomColor}" x:Name="RandomColorCheckBox" Grid.Column="0" Grid.Row="0" Content="Random Color" Margin="10" VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding IsRandomImage}" x:Name="RandomImageCheckBox" Grid.Column="0" Grid.Row="0" Content="Random Image" Margin="10" VerticalAlignment="Center"/>
                    <Grid Visibility="{Binding ElementName=RandomImageCheckBox,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock  Margin="5" Text="Thư mục ảnh:"/>
                        <TextBox Text="{Binding ImagePath}" Grid.Column="1"/>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <!--INFO FOOTER-->
        <Grid Grid.Row="2"
              HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
        </Grid>
    </Grid>
</UserControl>